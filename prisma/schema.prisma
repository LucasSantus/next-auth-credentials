generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Category {
  id          String    @id @default(uuid())
  title       String
  description String
  slug        String
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  deletedAt   DateTime?
  todos       Todo[]
  user        User      @relation(fields: [userId], references: [id])
  userId      String
}

model Todo {
  id          String    @id @default(uuid())
  title       String
  description String
  isCompleted Boolean   @default(false)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  deletedAt   DateTime?
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  todoList    TodoList? @relation(fields: [todoListId], references: [id])
  todoListId  String?
}

model TodoList {
  id     String @id @default(uuid())
  userId String
  todos  Todo[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String     @id @default(cuid())
  name           String?
  email          String?    @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  accounts       Account[]
  sessions       Session[]
  Category       Category[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
